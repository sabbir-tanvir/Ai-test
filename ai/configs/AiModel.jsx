const {
  GoogleGenerativeAI,
  HarmCategory,
  HarmBlockThreshold,
} = require("@google/generative-ai");

const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;
const genAI = new GoogleGenerativeAI(apiKey);

const model = genAI.getGenerativeModel({
  model: "gemini-2.0-flash",
});

const generationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 40,
  maxOutputTokens: 8192,
  responseMimeType: "text/plain",
};
const CodeGenerationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 40,
  maxOutputTokens: 8192,
  responseMimeType: "application/json",
};



export const chatSession = model.startChat({
  generationConfig,
  history: [
  ],
});

export const GenAiCode = model.startChat({
  generationConfig: CodeGenerationConfig,
  history: [
    {
      role: "user",
      parts: [
        {text: "Generate a Project in React. Create multiple components, organizing them in separate folders with filenames using the .js extension, if needed. The output should use Tailwind CSS for styling, \nwithout any third-party dependencies or libraries, except for icons from the lucide-react library, which should only be used when necessary. Available icons include: Heart, Shield, Clock, Users, Play, Home, Search, Menu, User, Settings, Mail, Bell, Calendar, Star, Upload, Download, Trash, Edit, Plus, Minus, Check, X, and ArrowRight. For example, you can import an icon as import { Heart } from \"lucide-react\" and use it in JSX as <Heart className=\"\" />.\nalso you can use date-fns for date format and react-chartjs-2 chart, graph library\n\n\"\nso im using tailwind css \ninside my App.css so you must have to impot that to the app.js right ?\nand also there might index.css that using @tailwind base;\n@tailwind components;\n@tailwind utilities;\nand for beter understanding the code structure im giving a lookup code that you can see for better understanding \nimport dedent from \"dedent\";\n\nexport default {\n  SUGGSTIONS: ['Create ToDo App in React', 'Create Budget Track App', 'Create Gym Managment Portal Dashboard', 'Create Quizz App On History', 'Create Login Signup Screen'],\n  HERO_HEADING: 'What do you want to build?',\n  HERO_DESC: 'Prompt, run, edit, and deploy full-stack web apps.',\n  INPUT_PLACEHOLDER: 'What you want to build?',\n  SIGNIN_HEADING: 'Continue With Bolt.New 2.0',\n  SIGNIN_SUBHEADING: 'To use Bolt you must log into an existing account or create one.',\n  SIGNIn_AGREEMENT_TEXT: 'By using Bolt, you agree to the collection of usage data for analytics.',\n\n  DEFAULT_FILE: {\n    \"/App.js\": {\n      code: `import React from \"react\";\nimport \"./App.css\"; // Important: import the Tailwind directives\n\nexport default function App() {\n  return (\n    <div className=\"bg-gray-100 min-h-screen flex items-center justify-center\">\n      <h1 className=\"text-3xl font-bold text-blue-600\">\n        Hello from App.js with Tailwind!\n      </h1>\n    </div>\n  );\n}\n`\n    },\n\n    '/public/index.html': {\n      code: `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>`\n    },\n    '/App.css': {\n      code: `\n@tailwind base;\n@tailwind components;\n@tailwind utilities;`\n    },\n    '/index.css': {\n      code: `\n@import \"tailwindcss\";`\n    },\n    '/tailwind.config.js': {\n      code: `\n            /** @type {import('tailwindcss').Config} */\nmodule.exports = {\ncontent: [\n  \"./public/index.html\",\n  \"./**/*.{js,jsx,ts,tsx}\",\n],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}`\n    },\n    '/postcss.config.js': {\n      code: `/** @type {import('postcss-load-config').Config} */\nconst config = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n};\n\nexport default config;\n`\n    }\n  },\n  DEPENDANCY: {\n    \"postcss\": \"^8\",\n    \"tailwindcss\": \"^3.4.1\",\n    \"autoprefixer\": \"^10.0.0\",\n    \"uuid4\": \"^2.0.3\",\n    \"tailwind-merge\": \"^2.4.0\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"lucide-react\": \"^0.477.0\", // Fixed duplicate, kept latest version\n    \"react-router-dom\": \"^7.1.1\",\n    \"firebase\": \"^11.1.0\",\n    \"@google/generative-ai\": \"^0.21.0\",\n    \"date-fns\": \"^4.1.0\",\n    \"react-chartjs-2\": \"^5.3.0\",\n    \"chart.js\": \"^4.4.7\",\n  },\n\n  // Generate package.json content with our dependencies\n  getPackageJson() {\n    return {\n      \"name\": \"my-bolt-app\",\n      \"version\": \"1.0.0\",\n      \"description\": \"App built with Bolt.New 2.0\",\n      \"dependencies\": {\n        \"react\": \"^19.0.0\",\n        \"react-dom\": \"^19.0.0\",\n        \"react-scripts\": \"^5.0.0\",\n        \"lucide-react\": \"^0.477.0\",\n        ...this.DEPENDANCY\n      },\n      \"main\": \"/index.js\",\n      \"devDependencies\": {},\n      \"scripts\": {\n        \"start\": \"react-scripts start\",\n        \"build\": \"react-scripts build\",\n        \"test\": \"react-scripts test\",\n        \"eject\": \"react-scripts eject\"\n      },\n      \"eslintConfig\": {\n        \"extends\": [\n          \"react-app\"\n        ]\n      },\n      \"browserslist\": {\n        \"production\": [\n          \">0.2%\",\n          \"not dead\",\n          \"not op_mini all\"\n        ],\n        \"development\": [\n          \"last 1 chrome version\",\n          \"last 1 firefox version\",\n          \"last 1 safari version\"\n        ]\n      }\n    };\n  },\n\"\nnow read rest \n\nReturn the response in JSON format with the following schema:\n{\n  \"projectTitle\": \"\",\n  \"explanation\": \"\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"\"\n    },\n    ...\n  },\n  \"generatedFiles\": []\n}\n\nHereâ€™s the reformatted and improved version of your prompt:\n\nGenerate a programming code structure for a React project using Vite. Create multiple components, organizing them in separate folders with filenames using the .js extension, if needed. The output should use Tailwind CSS for styling, without any third-party dependencies or libraries, except for icons from the lucide-react library, which should only be used when necessary. Available icons include: Heart, Shield, Clock, Users, Play, Home, Search, Menu, User, Settings, Mail, Bell, Calendar, Star, Upload, Download, Trash, Edit, Plus, Minus, Check, X, and ArrowRight. For example, you can import an icon as import { Heart } from \"lucide-react\" and use it in JSX as <Heart className=\"\" />.\n\nReturn the response in JSON format with the following schema:\n\njson\nCopy code\n{\n  \"projectTitle\": \"\",\n  \"explanation\": \"\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"\"\n    },\n    ...\n  },\n  \"generatedFiles\": []\n}\nEnsure the files field contains all created files, and the generatedFiles field lists all the filenames. Each file's code should be included in the code field, following this example:\nfiles:{\n  \"/App.js\": {\n    \"code\": \"import React from 'react';\\nimport './styles.css';\\nexport default function App() {\\n  return (\\n    <div className='p-4 bg-gray-100 text-center'>\\n      <h1 className='text-2xl font-bold text-blue-500'>Hello, Tailwind CSS with Sandpack!</h1>\\n      <p className='mt-2 text-gray-700'>This is a live code editor.</p>\\n    </div>\\n  );\\n}\"\n  }\n}\n  Additionally, include an explanation of the project's structure, purpose, and functionality in the explanation field. Make the response concise and clear in one paragraph.\n  - When asked then only use this package to import, here are some packages available to import and use (date-fns,react-chartjs-2,\"firebase\",\"@google/generative-ai\" ) only when it required\n  \n  - For placeholder images, please use a https://archive.org/download/placeholder-image/placeholder-image.jpg\n  -Add Emoji icons whenever needed to give good user experinence\n  - all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production.\n\n- By default, this template supports JSX syntax with Tailwind CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them.\n\n- Use icons from lucide-react for logos.\n\n- Use stock photos from unsplash where appropriate, only valid URLs you know exist. Do not download the images, only link to them in image tags.\n   `,\n\n\n"},
      ],
    },
    {
      role: "model",
      parts: [
        {text: "```json\n{\n  \"projectTitle\": \"Gym Management Portal Dashboard\",\n  \"explanation\": \"This React project creates a Gym Management Portal Dashboard using Tailwind CSS for styling and lucide-react for icons. The project is structured into multiple components organized in separate folders to manage different aspects of the gym, such as members, schedules, and analytics. It includes basic date formatting with date-fns and data visualization using react-chartjs-2. The dashboard is designed to provide an intuitive and visually appealing interface for gym staff and members.\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"import React from 'react';\\nimport './App.css';\\nimport Dashboard from './components/Dashboard/Dashboard';\\n\\nfunction App() {\\n  return (\\n    <div className=\\\"App\\\">\\n      <Dashboard />\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\"\n    },\n    \"/App.css\": {\n      \"code\": \"@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\"\n    },\n    \"/index.css\": {\n      \"code\": \"@import 'tailwindcss';\"\n    },\n    \"/tailwind.config.js\": {\n      \"code\": \"/** @type {import('tailwindcss').Config} */\\nmodule.exports = {\\n  content: [\\n    \\\"./src/**/*.{js,jsx,ts,tsx}\\\",\\n  ],\\n  theme: {\\n    extend: {},\\n  },\\n  plugins: [],\\n}\"\n    },\n    \"/postcss.config.js\": {\n      \"code\": \"module.exports = {\\n  plugins: {\\n    tailwindcss: {},\\n    autoprefixer: {},\\n  },\\n}\"\n    },\n    \"/components/Dashboard/Dashboard.js\": {\n      \"code\": \"import React from 'react';\\nimport Sidebar from './Sidebar';\\nimport MainContent from './MainContent';\\n\\nfunction Dashboard() {\\n  return (\\n    <div className=\\\"flex h-screen bg-gray-100\\\">\\n      <Sidebar />\\n      <MainContent />\\n    </div>\\n  );\\n}\\n\\nexport default Dashboard;\\n\"\n    },\n    \"/components/Dashboard/Sidebar.js\": {\n      \"code\": \"import React from 'react';\\nimport { Home, Users, Calendar, Settings, ChartBar, Menu } from 'lucide-react';\\n\\nfunction Sidebar() {\\n  return (\\n    <div className=\\\"w-64 bg-gray-800 text-white flex flex-col\\\">\\n        <div className=\\\"p-4 flex items-center\\\">\\n            <Menu className=\\\"mr-2\\\" />\\n            <span className=\\\"text-lg font-semibold\\\">Gym Portal</span>\\n        </div>\\n\\n      <ul className=\\\"flex-1 p-4\\\">\\n        <li className=\\\"hover:bg-gray-700 rounded-md mb-2\\\">\\n          <a href=\\\"#\\\" className=\\\"flex items-center p-2\\\">\\n            <Home className=\\\"mr-2\\\" />\\n            Dashboard\\n          </a>\\n        </li>\\n        <li className=\\\"hover:bg-gray-700 rounded-md mb-2\\\">\\n          <a href=\\\"#\\\" className=\\\"flex items-center p-2\\\">\\n            <Users className=\\\"mr-2\\\" />\\n            Members\\n          </a>\\n        </li>\\n        <li className=\\\"hover:bg-gray-700 rounded-md mb-2\\\">\\n          <a href=\\\"#\\\" className=\\\"flex items-center p-2\\\">\\n            <Calendar className=\\\"mr-2\\\" />\\n            Schedule\\n          </a>\\n        </li>\\n        <li className=\\\"hover:bg-gray-700 rounded-md mb-2\\\">\\n          <a href=\\\"#\\\" className=\\\"flex items-center p-2\\\">\\n            <ChartBar className=\\\"mr-2\\\" />\\n            Analytics\\n          </a>\\n        </li>\\n        <li className=\\\"hover:bg-gray-700 rounded-md mb-2\\\">\\n          <a href=\\\"#\\\" className=\\\"flex items-center p-2\\\">\\n            <Settings className=\\\"mr-2\\\" />\\n            Settings\\n          </a>\\n        </li>\\n      </ul>\\n      <div className=\\\"p-4\\\">\\n        <p className=\\\"text-sm text-gray-500\\\">Â© 2024 Gym Portal</p>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default Sidebar;\\n\"\n    },\n    \"/components/Dashboard/MainContent.js\": {\n      \"code\": \"import React from 'react';\\nimport { format } from 'date-fns';\\nimport { Line } from 'react-chartjs-2';\\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\\n\\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\\n\\nfunction MainContent() {\\n  const now = new Date();\\n  const formattedDate = format(now, 'EEEE, MMMM dd, yyyy');\\n\\n  const data = {\\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\\n    datasets: [\\n      {\\n        label: 'New Members',\\n        data: [65, 59, 80, 81, 56, 55],\\n        fill: true,\\n        backgroundColor: 'rgba(75,192,192,0.2)',\\n        borderColor: 'rgba(75,192,192,1)',\\n      },\\n    ],\\n  };\\n\\n  const options = {\\n    responsive: true,\\n    plugins: {\\n      legend: {\\n        display: false,\\n      },\\n      title: {\\n        display: true,\\n        text: 'Monthly New Members',\\n      },\\n    },\\n  };\\n\\n  return (\\n    <div className=\\\"flex-1 p-4\\\">\\n      <div className=\\\"flex items-center justify-between mb-4\\\">\\n        <h1 className=\\\"text-2xl font-semibold\\\">Dashboard</h1>\\n        <p className=\\\"text-gray-600\\\">{formattedDate}</p>\\n      </div>\\n\\n      <div className=\\\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\\\">\\n        <div className=\\\"bg-white shadow rounded-md p-4\\\">\\n          <h2 className=\\\"text-lg font-semibold mb-2\\\">Total Members</h2>\\n          <p className=\\\"text-3xl font-bold\\\">350</p>\\n        </div>\\n\\n        <div className=\\\"bg-white shadow rounded-md p-4\\\">\\n          <h2 className=\\\"text-lg font-semibold mb-2\\\">Active Members</h2>\\n          <p className=\\\"text-3xl font-bold\\\">280</p>\\n        </div>\\n\\n        <div className=\\\"bg-white shadow rounded-md p-4\\\">\\n          <h2 className=\\\"text-lg font-semibold mb-2\\\">Revenue</h2>\\n          <p className=\\\"text-3xl font-bold\\\">$15,000</p>\\n        </div>\\n      </div>\\n\\n      <div className=\\\"mt-4 bg-white shadow rounded-md p-4\\\">\\n        <Line data={data} options={options} />\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default MainContent;\\n\"\n    }\n  },\n  \"generatedFiles\": [\n    \"/App.js\",\n    \"/App.css\",\n    \"/index.css\",\n    \"/tailwind.config.js\",\n    \"/postcss.config.js\",\n    \"/components/Dashboard/Dashboard.js\",\n    \"/components/Dashboard/Sidebar.js\",\n    \"/components/Dashboard/MainContent.js\"\n  ]\n}\n```"},
      ],
    },
  ],
})



//     const result = await chatSession.sendMessage("INSERT_INPUT_HERE");
//     console.log(result.response.text());
//   }
