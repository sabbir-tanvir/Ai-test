const {
  GoogleGenerativeAI,
  HarmCategory,
  HarmBlockThreshold,
} = require("@google/generative-ai");

const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;
const genAI = new GoogleGenerativeAI(apiKey);

const model = genAI.getGenerativeModel({
  model: "gemini-2.0-flash",
});

const generationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 40,
  maxOutputTokens: 8192,
  responseMimeType: "text/plain",
};
const CodeGenerationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 40,
  maxOutputTokens: 8192,
  responseMimeType: "application/json",
};



export const chatSession = model.startChat({
  generationConfig,
  history: [
  ],
});

export const GenAiCode = model.startChat({
  generationConfig: CodeGenerationConfig,
  history: [
    {
      role: "user",
      parts: [
        {text: "\nGenerate a Project in React. Create multiple components, organizing them in separate folders with filenames using the .js extension, if needed. The output should use Tailwind CSS for styling, \\nwithout any third-party dependencies or libraries, except for icons from the lucide-react library, which should only be used when necessary. Available icons include: Heart, Shield, Clock, Users, Play, Home, Search, Menu, User, Settings, Mail, Bell, Calendar, Star, Upload, Download, Trash, Edit, Plus, Minus, Check, X, and ArrowRight. For example, you can import an icon as import { Heart } from \"lucide-react\" and use it in JSX as <Heart className=\"\" />.\\nalso you can use date-fns for date format and react-chartjs-2 chart, graph library\\n\\nReturn the response in JSON format with the following schema:\\n{\\n  \"projectTitle\": \"\",\\n  \"explanation\": \"\",\\n  \"files\": {\\n\ninside the app.js file you must have to import the app.css file in order to make the tailwind work u understand and also apply the import app.css for other likke inde.html to make it more sure     \"/App.js\": {\\n      \"code\": \"\"\\n    },\\n    ...\\n  },\\n  \"generatedFiles\": []\\n}\\n\\nHere‚Äôs the reformatted and improved version of your prompt:\\n\\nGenerate a programming code structure for a React project using Vite. Create multiple components, organizing them in separate folders with filenames using the .js extension, if needed. The output should use Tailwind CSS for styling, without any third-party dependencies or libraries, except for icons from the lucide-react library, which should only be used when necessary. Available icons include: Heart, Shield, Clock, Users, Play, Home, Search, Menu, User, Settings, Mail, Bell, Calendar, Star, Upload, Download, Trash, Edit, Plus, Minus, Check, X, and ArrowRight. For example, you can import an icon as import { Heart } from \"lucide-react\" and use it in JSX as <Heart className=\"\" />.\\n\\nReturn the response in JSON format with the following schema:\\n\\njson\\nCopy code\\n{\\n  \"projectTitle\": \"\",\\n  \"explanation\": \"\",\\n  \"files\": {\\n    \"/App.js\": {\\n      \"code\": \"\"\\n    },\\n    ...\\n  },\\n  \"generatedFiles\": []\\n}\\nEnsure the files field contains all created files, and the generatedFiles field lists all the filenames. Each file's code should be included in the code field, following this example:\\nfiles:{\\n  \"/App.js\": {\\n    \"code\": \"import React from 'react';\\nimport './styles.css';\\nexport default function App() {\\n  return (\\n    <div className='p-4 bg-gray-100 text-center'>\\n      <h1 className='text-2xl font-bold text-blue-500'>Hello, Tailwind CSS with Sandpack!</h1>\\n      <p className='mt-2 text-gray-700'>This is a live code editor.</p>\\n    </div>\\n  );\\n}\"\\n  }\\n}\\n  Additionally, include an explanation of the project's structure, purpose, and functionality in the explanation field. Make the response concise and clear in one paragraph.\\n  - When asked then only use this package to import, here are some packages available to import and use (date-fns,react-chartjs-2,\"firebase\",\"@google/generative-ai\" ) only when it required\\n  \\n  - For placeholder images, please use a https://archive.org/download/placeholder-image/placeholder-image.jpg\\n  -Add Emoji icons whenever needed to give good user experinence\\n  - all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production.\\n\\n- By default, this template supports JSX syntax with Tailwind CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them.\\n\\n- Use icons from lucide-react for logos.\\n\\n- Use stock photos from unsplash where appropriate, only valid URLs you know exist. Do not download the images, only link to them in image tags.\\n   `,\\n\\n\\n\" },\n\n\n\nand make sure that in App.css the taiwind config so import .App.css inside the app.js \n"},
      ],
    },
    {
      role: "model",
      parts: [
        {text: "```json\n{\n  \"projectTitle\": \"Dashboard App\",\n  \"explanation\": \"This React project creates a simplified dashboard application with Tailwind CSS styling. It features a home page, a statistics section with a chart, a user management page, and a settings page. The project utilizes lucide-react icons for visual elements and Tailwind CSS for consistent styling. Date-fns and react-chartjs-2 are included to display information and improve the user experience.\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"import React from 'react';\\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\\nimport Home from './components/Home/Home';\\nimport Statistics from './components/Statistics/Statistics';\\nimport Users from './components/Users/Users';\\nimport Settings from './components/Settings/Settings';\\nimport { Home as HomeIcon, Users as UsersIcon, Settings as SettingsIcon, Star, Menu, Clock } from 'lucide-react';\\nimport './App.css';\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <div className=\\\"flex h-screen\\\">\\n        {/* Sidebar */}\\n        <div className=\\\"w-64 bg-gray-800 text-white flex flex-col\\\">\\n          <div className=\\\"p-4 text-2xl font-bold\\\">Dashboard üöÄ</div>\\n          <nav className=\\\"flex-grow\\\">\\n            <ul>\\n              <li className=\\\"p-4 hover:bg-gray-700 flex items-center\\\">\\n                <HomeIcon className=\\\"mr-2\\\" /><Link to=\\\"/\\\">Home</Link>\\n              </li>\\n              <li className=\\\"p-4 hover:bg-gray-700 flex items-center\\\">\\n                <Clock className=\\\"mr-2\\\" /><Link to=\\\"/statistics\\\">Statistics</Link>\\n              </li>\\n              <li className=\\\"p-4 hover:bg-gray-700 flex items-center\\\">\\n                <UsersIcon className=\\\"mr-2\\\" /><Link to=\\\"/users\\\">Users</Link>\\n              </li>\\n              <li className=\\\"p-4 hover:bg-gray-700 flex items-center\\\">\\n                <SettingsIcon className=\\\"mr-2\\\" /><Link to=\\\"/settings\\\">Settings</Link>\\n              </li>\\n            </ul>\\n          </nav>\\n          <div className=\\\"p-4 text-sm\\\">¬© 2024</div>\\n        </div>\\n\\n        {/* Content */}\\n        <div className=\\\"flex-1 bg-gray-100 p-8\\\">\\n          <Routes>\\n            <Route path=\\\"/\\\" element={<Home />} />\\n            <Route path=\\\"/statistics\\\" element={<Statistics />} />\\n            <Route path=\\\"/users\\\" element={<Users />} />\\n            <Route path=\\\"/settings\\\" element={<Settings />} />\\n          </Routes>\\n        </div>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\"\n    },\n    \"/components/Home/Home.js\": {\n      \"code\": \"import React from 'react';\\nimport { ArrowRight } from 'lucide-react';\\n\\nfunction Home() {\\n  return (\\n    <div className=\\\"p-4\\\">\\n      <h1 className=\\\"text-3xl font-bold mb-4\\\">Welcome Home! üè†</h1>\\n      <p className=\\\"text-gray-700 mb-6\\\">This is the main dashboard overview. Get a quick snapshot of your system's status.</p>\\n      <div className=\\\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\\\">\\n        <div className=\\\"bg-white rounded-lg shadow-md p-4\\\">\\n          <h2 className=\\\"text-xl font-semibold mb-2\\\">System Status</h2>\\n          <p className=\\\"text-gray-600\\\">System is running smoothly. All services are operational.</p>\\n        </div>\\n        <div className=\\\"bg-white rounded-lg shadow-md p-4\\\">\\n          <h2 className=\\\"text-xl font-semibold mb-2\\\">Recent Activity</h2>\\n          <ul className=\\\"list-disc list-inside text-gray-600\\\">\\n            <li>User logged in</li>\\n            <li>Data backup completed</li>\\n            <li>System update installed</li>\\n          </ul>\\n        </div>\\n        <div className=\\\"bg-white rounded-lg shadow-md p-4\\\">\\n          <h2 className=\\\"text-xl font-semibold mb-2\\\">Quick Actions</h2>\\n          <button className=\\\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\\\">\\n            Run Backup <ArrowRight className=\\\"inline-block ml-2\\\" />\\n          </button>\\n        </div>\\n      </div>\\n      <img src=\\\"https://archive.org/download/placeholder-image/placeholder-image.jpg\\\" alt=\\\"Placeholder\\\" className=\\\"mt-8 rounded-lg shadow-md\\\" />\\n    </div>\\n  );\\n}\\n\\nexport default Home;\\n\"\n    },\n    \"/components/Statistics/Statistics.js\": {\n      \"code\": \"import React from 'react';\\nimport { Bar } from 'react-chartjs-2';\\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\\nimport { format } from 'date-fns';\\n\\nChartJS.register(\\n  CategoryScale,\\n  LinearScale,\\n  BarElement,\\n  Title,\\n  Tooltip,\\n  Legend\\n);\\n\\nfunction Statistics() {\\n  const data = {\\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\\n    datasets: [\\n      {\\n        label: 'Sales',\\n        data: [12, 19, 3, 5, 2, 3],\\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\\n        borderColor: 'rgba(75, 192, 192, 1)',\\n        borderWidth: 1,\\n      },\\n    ],\\n  };\\n\\n  const options = {\\n    responsive: true,\\n    plugins: {\\n      title: {\\n        display: true,\\n        text: 'Monthly Sales Data',\\n      },\\n    },\\n  };\\n\\n  const currentDate = new Date();\\n  const formattedDate = format(currentDate, 'MMMM dd, yyyy');\\n\\n  return (\\n    <div className=\\\"p-4\\\">\\n      <h1 className=\\\"text-3xl font-bold mb-4\\\">Statistics üìä</h1>\\n      <p className=\\\"text-gray-700 mb-6\\\">Here's an overview of your key statistics.</p>\\n      <Bar data={data} options={options} />\\n      <p className=\\\"mt-4 text-sm text-gray-500\\\">Last updated: {formattedDate}</p>\\n    </div>\\n  );\\n}\\n\\nexport default Statistics;\\n\"\n    },\n    \"/components/Users/Users.js\": {\n      \"code\": \"import React, { useState } from 'react';\\nimport { User, Trash, Edit, Plus } from 'lucide-react';\\n\\nfunction Users() {\\n  const [users, setUsers] = useState([\\n    { id: 1, name: 'John Doe', email: 'john.doe@example.com' },\\n    { id: 2, name: 'Jane Smith', email: 'jane.smith@example.com' },\\n  ]);\\n\\n  const handleDelete = (id) => {\\n    setUsers(users.filter(user => user.id !== id));\\n  };\\n\\n  const handleEdit = (id) => {\\n    // Implement edit functionality here\\n    alert(`Edit user with ID: ${id}`);\\n  };\\n\\n  const handleAddUser = () => {\\n        setUsers([...users, { id: users.length + 3, name: 'New User', email: 'newuser@email.com' }])\\n  };\\n\\n  return (\\n    <div className=\\\"p-4\\\">\\n      <h1 className=\\\"text-3xl font-bold mb-4\\\">Users üßë‚Äçü§ù‚Äçüßë</h1>\\n      <p className=\\\"text-gray-700 mb-6\\\">Manage your users and their permissions.</p>\\n      <button className=\\\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mb-4 flex items-center\\\" onClick={handleAddUser}>\\n        <Plus className=\\\"mr-2\\\" /> Add User\\n      </button>\\n      <div className=\\\"overflow-x-auto\\\">\\n        <table className=\\\"min-w-full bg-white border border-gray-200\\\">\\n          <thead>\\n            <tr className=\\\"bg-gray-100\\\">\\n              <th className=\\\"p-2 border-b\\\">Name</th>\\n              <th className=\\\"p-2 border-b\\\">Email</th>\\n              <th className=\\\"p-2 border-b\\\">Actions</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            {users.map(user => (\\n              <tr key={user.id}>\\n                <td className=\\\"p-2 border-b text-center\\\">{user.name}</td>\\n                <td className=\\\"p-2 border-b text-center\\\">{user.email}</td>\\n                <td className=\\\"p-2 border-b text-center\\\">\\n                  <button className=\\\"text-blue-500 hover:text-blue-700 mr-2\\\" onClick={() => handleEdit(user.id)}>\\n                    <Edit className=\\\"inline-block\\\" />\\n                  </button>\\n                  <button className=\\\"text-red-500 hover:text-red-700\\\" onClick={() => handleDelete(user.id)}>\\n                    <Trash className=\\\"inline-block\\\" />\\n                  </button>\\n                </td>\\n              </tr>\\n            ))}\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default Users;\\n\"\n    },\n    \"/components/Settings/Settings.js\": {\n      \"code\": \"import React from 'react';\\nimport { Settings as SettingsIcon, Bell, Mail } from 'lucide-react';\\n\\nfunction Settings() {\\n  return (\\n    <div className=\\\"p-4\\\">\\n      <h1 className=\\\"text-3xl font-bold mb-4\\\">Settings ‚öôÔ∏è</h1>\\n      <p className=\\\"text-gray-700 mb-6\\\">Customize your dashboard settings.</p>\\n\\n      <div className=\\\"mb-4\\\">\\n        <h2 className=\\\"text-xl font-semibold mb-2\\\">Notification Preferences</h2>\\n        <div className=\\\"flex items-center\\\">\\n          <Bell className=\\\"mr-2\\\" />\\n          <label className=\\\"inline-flex items-center\\\">\\n            <input type=\\\"checkbox\\\" className=\\\"form-checkbox h-5 w-5 text-blue-500\\\" />\\n            <span className=\\\"ml-2 text-gray-700\\\">Receive email notifications</span>\\n          </label>\\n        </div>\\n        <div className=\\\"flex items-center\\\">\\n          <Mail className=\\\"mr-2\\\" />\\n          <label className=\\\"inline-flex items-center\\\">\\n            <input type=\\\"checkbox\\\" className=\\\"form-checkbox h-5 w-5 text-blue-500\\\" />\\n            <span className=\\\"ml-2 text-gray-700\\\">Receive SMS notifications</span>\\n          </label>\\n        </div>\\n      </div>\\n\\n      <div>\\n        <h2 className=\\\"text-xl font-semibold mb-2\\\">Account Settings</h2>\\n        <div className=\\\"mb-2\\\">\\n          <label className=\\\"block text-gray-700 text-sm font-bold mb-2\\\" htmlFor=\\\"username\\\">Username:</label>\\n          <input type=\\\"text\\\" id=\\\"username\\\" className=\\\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\\\" placeholder=\\\"Enter your username\\\" />\\n        </div>\\n        <div>\\n          <label className=\\\"block text-gray-700 text-sm font-bold mb-2\\\" htmlFor=\\\"password\\\">Password:</label>\\n          <input type=\\\"password\\\" id=\\\"password\\\" className=\\\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\\\" placeholder=\\\"Enter your password\\\" />\\n        </div>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default Settings;\\n\"\n    },\n    \"/App.css\": {\n      \"code\": \"@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\"\n    },\n    \"/index.js\": {\n      \"code\": \"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\"\n    },\n    \"/index.css\": {\n      \"code\": \"@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\"\n    },\n    \"/public/index.html\": {\n      \"code\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta charset=\\\"utf-8\\\" />\\n    <link rel=\\\"icon\\\" href=\\\"%PUBLIC_URL%/favicon.ico\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n    <meta name=\\\"theme-color\\\" content=\\\"#000000\\\" />\\n    <meta\\n      name=\\\"description\\\"\\n      content=\\\"Web site created using create-react-app\\\"\\n    />\\n    <link rel=\\\"apple-touch-icon\\\" href=\\\"%PUBLIC_URL%/logo192.png\\\" />\\n    <link rel=\\\"manifest\\\" href=\\\"%PUBLIC_URL%/manifest.json\\\" />\\n    <title>React App</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"../App.css\\\">\\n  </head>\\n  <body>\\n    <noscript>You need to enable JavaScript to run this app.</noscript>\\n    <div id=\\\"root\\\"></div>\\n  </body>\\n</html>\\n\"\n    },\n    \"/tailwind.config.js\": {\n      \"code\": \"/** @type {import('tailwindcss').Config} */\\nmodule.exports = {\\n  content: [\\n    \\\"./src/**/*.{js,jsx,ts,tsx}\\\",\\n    \\\"./public/index.html\\\",\\n  ],\\n  theme: {\\n    extend: {},\\n  },\\n  plugins: [],\\n}\"\n    }\n  },\n  \"generatedFiles\": [\n    \"/App.js\",\n    \"/components/Home/Home.js\",\n    \"/components/Statistics/Statistics.js\",\n    \"/components/Users/Users.js\",\n    \"/components/Settings/Settings.js\",\n    \"/App.css\",\n    \"/index.js\",\n    \"/index.css\",\n    \"/public/index.html\",\n    \"/tailwind.config.js\"\n  ]\n}\n```"},
      ],
    },
  ],
})



//     const result = await chatSession.sendMessage("INSERT_INPUT_HERE");
//     console.log(result.response.text());
//   }
